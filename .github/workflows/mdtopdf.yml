name: Generate PDF

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Merge Markdown and Generate PDF
        run: |-
          npm install -g md-to-pdf
          mkdir -p pdf

          # Ensure all images are accessible
          ls -la c4/images/ || echo "No C4 images found"

          # Create combined markdown
          echo "# MateMate Architecture Framework - Complete Documentation" > combined.md
          echo "" >> combined.md

          # Add main README
          if [ -f README.md ]; then
            cat README.md >> combined.md
            echo -e "\n\n---\n\n" >> combined.md
          fi

          # Add C4 diagrams (remove PlantUML blocks and fix image paths)
          echo "# C4 Architecture Views" >> combined.md
          echo "" >> combined.md
          for f in c4/*.md; do
            if [ -f "$f" ]; then
              # Remove PlantUML code blocks and fix image paths
              sed '/```plantuml/,/```/d' "$f" | sed 's|images/|c4/images/|g' >> combined.md
              echo -e "\n\n---\n\n" >> combined.md
            fi
          done

          # Add arc42 chapters
          echo "# arc42 Documentation" >> combined.md
          echo "" >> combined.md
          for f in arc42/0*.md; do
            if [ -f "$f" ]; then
              cat "$f" >> combined.md
              echo -e "\n\n---\n\n" >> combined.md
            fi
          done

          # Add requirements
          echo "# Requirements" >> combined.md
          echo "" >> combined.md
          for f in req/*.md; do
            if [ -f "$f" ]; then
              cat "$f" >> combined.md
              echo -e "\n\n---\n\n" >> combined.md
            fi
          done

          # Add documentation
          echo "# Framework Documentation" >> combined.md
          echo "" >> combined.md
          for f in docs/*.md; do
            if [ -f "$f" ]; then
              cat "$f" >> combined.md
              echo -e "\n\n---\n\n" >> combined.md
            fi
          done

          # Convert relative links to GitHub repository links (but NOT image references)
          REPO_URL="https://github.com/ANcpLua/MateMate/blob/master"

          # Match [text](path) but not ![text](path) by ensuring no ! before [
          # Handle direct directory paths with files: ](req/file.md, ](c4/file.md, etc.
          sed -i "s|\([^!]\)\[\([^]]*\)\](\(req/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\(c4/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\(arc42/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\(docs/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md

          # Handle parent directory references: ](../req/file.md, ](../docs/file.md, etc.
          sed -i "s|\([^!]\)\[\([^]]*\)\](\.\./\(req/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\.\./\(c4/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\.\./\(arc42/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md
          sed -i "s|\([^!]\)\[\([^]]*\)\](\.\./\(docs/[^)]*\.md\))|\1[\2]($REPO_URL/\3)|g" combined.md

          # Handle same-directory references (any .md file without path prefix)
          # This catches all [text](filename.md) patterns where filename doesn't start with http/https
          sed -i "s|\([^!]\)\[\([^]]*\)\](\([a-z0-9_-]*\.md\))|\1[\2]($REPO_URL/docs/\3)|g" combined.md

          # Debug: show samples of processed markdown
          echo "=== Sample of GitHub links (should have https://github.com) ==="
          grep -E '[^!]\[.*\]\(http' combined.md | head -5 || echo "No http links found"
          echo ""
          echo "=== Sample of image references (should have local paths) ==="
          grep -E '!\[.*\]\(' combined.md | head -3 || echo "No image references found"
          echo ""
          echo "=== Checking for any remaining unprocessed relative links ==="
          grep -E '\]\((\.\./|[a-z0-9_-]+\.md)' combined.md | grep -v 'http' | head -3 || echo "No unprocessed links found (good!)"

          # Convert to PDF with Chrome flags for GitHub Actions
          cat combined.md | md-to-pdf --basedir . --launch-options='{"args":["--no-sandbox","--disable-setuid-sandbox","--disable-gpu","--disable-dev-shm-usage"]}' > pdf/MateMate-Framework-Complete.pdf

      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          name: matemate-framework
          path: pdf
